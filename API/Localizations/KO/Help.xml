<?xml version="1.0"?>
<Help xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <programmingExamples>

    <ExamplePage>
      <description>사과를 발견하면 그쪽으로 움직입니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.eyes</upid>
            <upid>filter.fruit</upid>
            <upid>actuator.movement</upid>
            <upid>selector.towardclosest</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>사과와 부딪치면 사과를 먹습니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.bumpers</upid>
            <upid>filter.fruit</upid>
            <upid>actuator.eat</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>보라색 사과를 발견하면 사과를 피합니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.eyes</upid>
            <upid>filter.purple</upid>
            <upid>filter.fruit</upid>
            <upid>actuator.movement</upid>
            <upid>selector.avoidall</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>코두의 소리가 들리면 그쪽으로 움직입니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.ears</upid>
            <upid>filter.bokubot</upid>
            <upid>actuator.movement</upid>
            <upid>selector.towardclosest</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>사과를 가지고 있으면 그것을 먹습니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.got</upid>
            <upid>filter.fruit</upid>
            <upid>actuator.eat</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>사과와 부딪치면 사과를 먹습니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.bumpers</upid>
            <upid>filter.fruit</upid>
            <upid>filter.red</upid>
            <upid>actuator.eat</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>100점을 얻으면 게임에서 이깁니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.scored</upid>
            <upid>filter.100points</upid>
            <upid>actuator.victory</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>체력이 0점이 되면 게임이 끝납니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.health</upid>
            <upid>filter.000point</upid>
            <upid>actuator.gameover</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>블림프를 가지고 있으면 스스로 빨간색으로 변합니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.held</upid>
            <upid>filter.windblimp</upid>
            <upid>actuator.color</upid>
            <upid>modifier.red</upid>
            <upid>modifier.me</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>플레이어 1이 A버튼을 누르면 분홍색 미사일을 직선으로 발사합니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.gamepad</upid>
            <upid>filter.player1</upid>
            <upid>filter.abutton</upid>
            <upid>actuator.shoot</upid>
            <upid>modifier.pink</upid>
            <upid>modifier.up</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>특정한 지형 위에 있으면, 체력이 10점 올라갑니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.terrain</upid>
            <upid>filter.terrain</upid>
            <upid>actuator.heal</upid>
            <upid>modifier.010points</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>코두가 모두 없어지면 게임이 끝납니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.eyes</upid>
            <upid>filter.countnone</upid>
            <upid>filter.bokubot</upid>
            <upid>actuator.gameover</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>무엇을 보던지 모두 피합니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.eyes</upid>
            <upid>filter.anything</upid>
            <upid>actuator.movement</upid>
            <upid>selector.avoidall</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>특정한 물 위로 올라가면, 한 번 점프합니다. 특정 캐릭터들만 점프할 수 있습니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.water</upid>
            <upid>filter.water</upid>
            <upid>actuator.jump</upid>
            <upid>modifier.once</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>화가 난 푸시패드를 보면 피합니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.eyes</upid>
            <upid>filter.expressangry</upid>
            <upid>filter.pushpad</upid>
            <upid>actuator.movement</upid>
            <upid>selector.avoidall</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>사과가 가까이 있으면 그쪽으로 갑니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.eyes</upid>
            <upid>filter.closeby</upid>
            <upid>filter.fruit</upid>
            <upid>actuator.movement</upid>
            <upid>selector.towardclosest</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>지뢰가 많이 보이면 멀리 도망갑니다!</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.eyes</upid>
            <upid>filter.countmany</upid>
            <upid>filter.mine</upid>
            <upid>actuator.movement</upid>
            <upid>selector.awayfromall</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>0에서 5초 사이에 돌을 발사합니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.timer</upid>
            <upid>filter.random</upid>
            <upid>filter.05seconds</upid>
            <upid>actuator.launch</upid>
            <upid>modifier.objectrock</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>5에서 10초 사이에 동전을 발사합니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.timer</upid>
            <upid>filter.05seconds</upid>
            <upid>filter.random</upid>
            <upid>filter.05seconds</upid>
            <upid>actuator.launch</upid>
            <upid>modifier.objectcoin</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>20점을 넘기면 게임에서 이깁니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.scored</upid>
            <upid>filter.scoreabove</upid>
            <upid>filter.020points</upid>
            <upid>actuator.victory</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>가까운 곳에서 코두를 보면 무언가를 말합니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.eyes</upid>
            <upid>filter.bokubot</upid>
            <upid>filter.closeby</upid>
            <upid>actuator.say</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>아무것도 보이지 않으면 슬퍼합니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.eyes</upid>
            <upid>filter.countnone</upid>
            <upid>actuator.express</upid>
            <upid>modifier.expresssad</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>코두를 보면 기뻐합니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.eyes</upid>
            <upid>filter.bokubot</upid>
            <upid>actuator.express</upid>
            <upid>modifier.expresshappy</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>구름을 보면 구름 주변을 빠르게 돕니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.eyes</upid>
            <upid>filter.cloud</upid>
            <upid>actuator.movement</upid>
            <upid>selector.circle</upid>
            <upid>modifier.turnright</upid>
            <upid>modifier.quickly</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>코두가 보이지 않으면 빨간색으로 물듭니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.eyes</upid>
            <upid>filter.bokubot</upid>
            <upid>filter.countnone</upid>
            <upid>actuator.glow</upid>
            <upid>modifier.red</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>10초마다 돌을 만들어냅니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.timer</upid>
            <upid>filter.10seconds</upid>
            <upid>actuator.make</upid>
            <upid>modifier.objectrock</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>항상 소리가 납니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.always</upid>
            <upid>actuator.sound</upid>
            <upid>modifier.mu_ambinetmodd</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>항상 가까이 붙어 다닙니다. 일부 캐릭터들에서만 작동됩니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.always</upid>
            <upid>actuator.close</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>항상 열려있습니다. 일부 캐릭터들에서만 작동됩니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.always</upid>
            <upid>actuator.open</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>화가 난 코두를 보면 소리가 멈춥니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.eyes</upid>
            <upid>filter.bokubot</upid>
            <upid>filter.expressangry</upid>
            <upid>actuator.stopsound</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>별을 잡으면 두 번째 화면으로 넘어갑니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.got</upid>
            <upid>filter.star</upid>
            <upid>actuator.switchtask</upid>
            <upid>modifier.taskb</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>내 총알이 어떤 로봇을 맞히던지 총을 맞은 로봇은 기절합니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.missilehit</upid>
            <upid>filter.anybot</upid>
            <upid>actuator.zap</upid>
            <upid>modifier.it</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>내 총알이 도깨비불을 맞히면 도깨비불이 쓰러집니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.missilehit</upid>
            <upid>filter.wisp</upid>
            <upid>actuator.pop</upid>
            <upid>modifier.it</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>내 총알이 지뢰를 맞히면 지뢰가 폭발합니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.missilehit</upid>
            <upid>filter.mine</upid>
            <upid>actuator.boom</upid>
            <upid>modifier.it</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>내 총알이 지뢰를 맞히면 지뢰가 사라집니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.missilehit</upid>
            <upid>filter.sputnik</upid>
            <upid>actuator.vanish</upid>
            <upid>modifier.it</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>사과와 부딪치면 사과를 잡습니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.bumpers</upid>
            <upid>filter.fruit</upid>
            <upid>actuator.grab</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>특별한 지형 위에 있으면, 옮기고 있던 것이 무엇이던지 들고 있던 물건을 떨어트립니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.terrain</upid>
            <upid>filter.terrain</upid>
            <upid>actuator.drop</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>무언가와 부딪치면 옮기고 있던 것이 무엇이던지 들고 있던 물건을 넘겨줍니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.bumpers</upid>
            <upid>filter.anything</upid>
            <upid>actuator.give</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>체력이 0점이 되면 게임을 다시 시작합니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.health</upid>
            <upid>filter.000point</upid>
            <upid>actuator.restart</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>총알이 배를 맞히면 점수가 깎입니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.missilehit</upid>
            <upid>filter.floatbot</upid>
            <upid>actuator.unscore</upid>
            <upid>modifier.001point</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>A 버튼을 누르면, 카메라가 나를 따라다니게 합니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.gamepad</upid>
            <upid>filter.abutton</upid>
            <upid>actuator.camera.followme</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>B 버튼을 누르면, 카메라가 나를 따라다니지 않게 합니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.gamepad</upid>
            <upid>filter.bbutton</upid>
            <upid>actuator.camera.ignoreme</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>X 버튼을 누르면, 주인공이 보는 화면으로 변합니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.gamepad</upid>
            <upid>filter.xbutton</upid>
            <upid>actuator.camera.firstperson</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>왼쪽 스틱을 움직이면, 위나 아래로 날아갑니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.gamepad</upid>
            <upid>filter.leftstick</upid>
            <upid>actuator.movement</upid>
            <upid>selector.moveupdown</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>왼쪽 스틱을 움직이면 오른쪽으로 돕니다. </description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.gamepad</upid>
            <upid>filter.leftstick</upid>
            <upid>actuator.movement</upid>
            <upid>selector.moveleftright</upid>
            <upid>modifier.turnright</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>총알이 노란색 코두를 맞히면 코두의 체력 점수 5점이 깎입니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.missilehit</upid>
            <upid>filter.yellow</upid>
            <upid>filter.boku</upid>
            <upid>actuator.damage</upid>
            <upid>modifier.it</upid>
            <upid>modifier.005points</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>오른쪽 스틱을 움직이면, 북쪽이나 남쪽으로 갑니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.gamepad</upid>
            <upid>filter.rightstick</upid>
            <upid>actuator.movement</upid>
            <upid>modifier.constraint.northsouth</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>오른쪽 스틱을 움직이면, 동쪽이나 서쪽으로 갑니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.gamepad</upid>
            <upid>filter.rightstick</upid>
            <upid>actuator.movement</upid>
            <upid>modifier.constraint.eastwest</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>Y 버튼을 누르면, 북쪽으로 갑니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.gamepad</upid>
            <upid>filter.ybutton</upid>
            <upid>actuator.movement</upid>
            <upid>modifier.north</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>B 버튼을 누르면, 동쪽으로 갑니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.gamepad</upid>
            <upid>filter.bbutton</upid>
            <upid>actuator.movement</upid>
            <upid>modifier.east</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>A 버튼을 누르면, 남쪽으로 갑니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.gamepad</upid>
            <upid>filter.abutton</upid>
            <upid>actuator.movement</upid>
            <upid>modifier.south</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>X 버튼을 누르면, 서쪽으로 갑니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.gamepad</upid>
            <upid>filter.xbutton</upid>
            <upid>actuator.movement</upid>
            <upid>modifier.west</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>왼쪽 트리거를 누르면 천천히 앞으로 갑니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.gamepad</upid>
            <upid>filter.lefttrigger_analog</upid>
            <upid>actuator.movement</upid>
            <upid>selector.forward</upid>
            <upid>modifier.slowly</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>오른쪽 트리거를 누르면 빠르게 앞으로 갑니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.gamepad</upid>
            <upid>filter.righttrigger_analog</upid>
            <upid>actuator.movement</upid>
            <upid>selector.forward</upid>
            <upid>modifier.quickly</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>그 영역의 소리가 들리면 하트를 하늘로 세게 날립니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.ears</upid>
            <upid>filter.environ.arena.any</upid>
            <upid>actuator.launch</upid>
            <upid>modifier.strongly</upid>
            <upid>modifier.angle.high</upid>
            <upid>modifier.objectheart</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>총알이 초록색 코두를 맞히면 빨간 점수가 5점 올라갑니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.missilehit</upid>
            <upid>filter.green</upid>
            <upid>filter.boku</upid>
            <upid>actuator.score</upid>
            <upid>modifier.red</upid>
            <upid>modifier.005points</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>미사일을 한번 발사합니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>actuator.shoot</upid>
            <upid>modifier.once</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>여러분의 세계를 빠르게 돌아다닙니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>actuator.movement</upid>
            <upid>selector.wander</upid>
            <upid>modifier.quickly</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>돌에 부딪치면 청팀이 1점을 얻습니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.bumpers</upid>
            <upid>filter.rock</upid>
            <upid>actuator.score</upid>
            <upid>modifier.001point</upid>
            <upid>modifier.blue</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>왼쪽 스틱으로 캐릭터를 움직입니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.gamepad</upid>
            <upid>filter.leftstick</upid>
            <upid>actuator.movement</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

    <ExamplePage>
      <description>여러분의 세계를 돌아다닙니다.</description>
      <reflexes>
        <reflex>
          <upids>
            <upid>sensor.always</upid>
            <upid>actuator.movement</upid>
            <upid>selector.wander</upid>
          </upids>
        </reflex>
      </reflexes>
    </ExamplePage>

  </programmingExamples>



  <actorHelp>
    <item>
      <key>
        <string>BokuBot</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            코두는 조금 느리고 언덕 오르기를 힘들어합니다.
          </description>
          <upid>filter.boku</upid>
          <programs>

            <ExampleProgram>
              <description>
                사과를 찾아 먹는 코두를 만듭니다.
              </description>
              <tileUpid>filter.fruit</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.eyes</upid>
                        <upid>filter.fruit</upid>
                        <upid>actuator.movement</upid>
                        <upid>selector.towardclosest</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.bumpers</upid>
                        <upid>filter.fruit</upid>
                        <upid>actuator.eat</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>actuator.movement</upid>
                        <upid>selector.wander</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

            <ExampleProgram>
              <description>
                조종할 수 있는 코두를 만듭니다. 왼쪽 스틱으로 움직임을 조종합니다. A 버튼을 누르면 코두가 점프합니다.
              </description>
              <tileUpid>sensor.gamepad</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.leftstick</upid>
                        <upid>actuator.movement</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.abutton</upid>
                        <upid>actuator.jump</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

            <ExampleProgram>
              <description>
                빨간색 선을 따라가는 코두를 만듭니다.
              </description>
              <tileUpid>selector.followwaypoints</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>actuator.movement</upid>
                        <upid>selector.followwaypoints</upid>
                        <upid>modifier.red</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

            <ExampleProgram>
              <description>
                화면이 바뀌면 두 가지 행동을 번갈아 하는 코두를 만듭니다. A 버튼을 누르면 빨갛거나 파랗게 물듭니다.
              </description>
              <tileUpid>actuator.switchtask</tileUpid>
              <pages>
                <ExamplePage>
                  <description>빨갛게 물듭니다.</description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>actuator.glow</upid>
                        <upid>modifier.red</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.abutton</upid>
                        <upid>actuator.switchtask</upid>
                        <upid>modifier.taskb</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>

                <ExamplePage>
                  <description>파랗게 물듭니다.</description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>actuator.glow</upid>
                        <upid>modifier.blue</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.abutton</upid>
                        <upid>actuator.switchtask</upid>
                        <upid>modifier.taska</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

          </programs>
        </ActorHelp>
      </value>
    </item>

    <!-- ====================  CLAM ==========================-->
    <item>
      <key>
        <string>Clam</string>
      </key>
      <value>
        <ActorHelp>
          <upid>filter.clam</upid>
          <description>
            조개는 열고 닫을 수 있는 캐릭터입니다.
          </description>

          <programs>
            <!-- Enter the example program here -->
            <ExampleProgram>
              <description>열리거나 닫히는 조개를 만듭니다.</description>
              <tileUpid>actuator.open</tileUpid>
              <pages>

                <ExamplePage>
                  <description>열고 닫습니다.</description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.abutton</upid>
                        <upid>actuator.open</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.bbutton</upid>
                        <upid>actuator.close</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>

              </pages>
            </ExampleProgram>
          </programs>

        </ActorHelp>
      </value>
    </item>

    <!-- ====================  StarFish ==========================-->
    <item>
      <key>
        <string>Starfish</string>
      </key>
      <value>
        <ActorHelp>
          <upid>filter.starfish</upid>
          <description>불가사리는 땅 위나 물 아래에 삽니다.</description>

          <programs>
          </programs>

        </ActorHelp>
      </value>
    </item>


    <!-- ====================  LillyPad Single ==========================-->
    <item>
      <key>
        <string>LilypadSingle</string>
      </key>
      <value>
        <ActorHelp>

          <upid>filter.lilypadsingle</upid>
          <description>수련 잎은 그 위에서 통통 튕기는 것이 재미있습니다.</description>

          <programs>
          </programs>

        </ActorHelp>
      </value>
    </item>


    <!-- ====================  LillyPad ==========================-->
    <item>
      <key>
        <string>Lilypad</string>
      </key>
      <value>
        <ActorHelp>

          <upid>filter.lilypad</upid>
          <description>수련 잎의 무리.</description>
          <programs>
          </programs>

        </ActorHelp>
      </value>
    </item>

    <!-- ====================  SeaGrass Single==========================-->
    <item>
      <key>
        <string>SeagrassSingle</string>
      </key>
      <value>
        <ActorHelp>
          <upid>filter.seagrasssingle</upid>
          <description>해초는 바람이나 파도에 움직입니다.</description>

          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <!-- ====================  Sea Grass ==========================-->
    <item>
      <key>
        <string>Seagrass</string>
      </key>
      <value>
        <ActorHelp>

          <upid>filter.seagrass</upid>
          <description>한 무더기의 해초.</description>

          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <!-- ====================  Pipes ==========================-->
    <item>
      <key>
        <string>PipeStraight</string>
      </key>
      <value>
        <ActorHelp>

          <upid>filter.pipeStraight</upid>
          <description>다른 파이프에 연결되는 직선 파이프.</description>

          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>PipeCorner</string>
      </key>
      <value>
        <ActorHelp>

          <upid>filter.pipeCorner</upid>
          <description>다른 파이프에 연결되는 구부러진 파이프.</description>

          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>PipeCross</string>
      </key>
      <value>
        <ActorHelp>

          <upid>filter.pipeCross</upid>
          <description>다른 파이프에 연결되는 십자 파이프.</description>

          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <!-- ====================  InkJet ==========================-->
    <item>
      <key>
        <string>InkJet</string>
      </key>
      <value>
        <ActorHelp>

          <upid>filter.inkjet</upid>
          <description>물체를 숨길 수 있는 새까만 먹구름.</description>

          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>


    <item>
      <key>
        <string>TerraCannon</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            대포는 크고 느리지만 매우 강합니다.
          </description>
          <upid>filter.terracannon</upid>
          <programs>

            <ExampleProgram>
              <description>
                사과를 찾아 먹는 대포를 만듭니다.
              </description>
              <tileUpid>filter.fruit</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.eyes</upid>
                        <upid>filter.fruit</upid>
                        <upid>actuator.movement</upid>
                        <upid>selector.towardclosest</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.bumpers</upid>
                        <upid>filter.fruit</upid>
                        <upid>actuator.eat</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>actuator.movement</upid>
                        <upid>selector.wander</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

            <ExampleProgram>
              <description>
                조종할 수 있는 대포를 만듭니다. 왼쪽 스틱으로 움직임을 조종합니다. A 버튼을 누르면 대포가 점프합니다.
              </description>
              <tileUpid>sensor.gamepad</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.leftstick</upid>
                        <upid>actuator.movement</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.abutton</upid>
                        <upid>actuator.jump</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

            <ExampleProgram>
              <description>
                빨간색 선을 따라가는 대포를 만듭니다.
              </description>
              <tileUpid>selector.followwaypoints</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>actuator.movement</upid>
                        <upid>selector.followwaypoints</upid>
                        <upid>modifier.red</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

            <ExampleProgram>
              <description>
                화면이 바뀌면 두 가지 행동을 번갈아 하는 대포를 만듭니다. A 버튼을 누르면 빨갛거나 파랗게 물듭니다.
              </description>
              <tileUpid>actuator.switchtask</tileUpid>
              <pages>
                <ExamplePage>
                  <description>빨갛게 물듭니다.</description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>actuator.glow</upid>
                        <upid>modifier.red</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.abutton</upid>
                        <upid>actuator.switchtask</upid>
                        <upid>modifier.taskb</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>

                <ExamplePage>
                  <description>파랗게 물듭니다.</description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>actuator.glow</upid>
                        <upid>modifier.blue</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.abutton</upid>
                        <upid>actuator.switchtask</upid>
                        <upid>modifier.taska</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>FlyFish</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            플라이피쉬 주변을 빠르게 돕니다. 빨리 빨리 움직여야 할 때 좋습니다.
          </description>
          <upid>filter.flyfish</upid>
          <programs>

            <ExampleProgram>
              <description>
                사과를 찾아 먹는 플라이피쉬를 만듭니다.
              </description>
              <tileUpid>filter.fruit</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.eyes</upid>
                        <upid>filter.fruit</upid>
                        <upid>actuator.movement</upid>
                        <upid>selector.towardclosest</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.bumpers</upid>
                        <upid>filter.fruit</upid>
                        <upid>actuator.eat</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>actuator.movement</upid>
                        <upid>selector.wander</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

            <ExampleProgram>
              <description>
                조종할 수 있는 플라이피쉬를 만듭니다. 왼쪽 스틱으로 움직임을 조종합니다.
              </description>
              <tileUpid>sensor.gamepad</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.leftstick</upid>
                        <upid>actuator.movement</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

            <ExampleProgram>
              <description>
                빨간색 선을 따라가는 플라이피쉬를 만듭니다.
              </description>
              <tileUpid>selector.followwaypoints</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>actuator.movement</upid>
                        <upid>selector.followwaypoints</upid>
                        <upid>modifier.red</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

            <ExampleProgram>
              <description>
                화면이 바뀌면 두 가지 행동을 번갈아 하는 플라이피쉬를 만듭니다. A 버튼을 누르면 빨갛거나 파랗게 물듭니다.
              </description>
              <tileUpid>actuator.switchtask</tileUpid>
              <pages>
                <ExamplePage>
                  <description>빨갛게 물듭니다.</description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>actuator.glow</upid>
                        <upid>modifier.red</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.abutton</upid>
                        <upid>actuator.switchtask</upid>
                        <upid>modifier.taskb</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>

                <ExamplePage>
                  <description>파랗게 물듭니다.</description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>actuator.glow</upid>
                        <upid>modifier.blue</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.abutton</upid>
                        <upid>actuator.switchtask</upid>
                        <upid>modifier.taska</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Jet</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            일반적으로 제트 비행기는 땅에서 가까이 비행하지만 위나 아래로 움직이도록 프로그래밍 할 수 있습니다.
          </description>
          <upid>filter.jet</upid>
          <programs>

            <ExampleProgram>
              <description>
                사과를 찾아 먹는 제트 비행기를 만듭니다.
              </description>
              <tileUpid>filter.fruit</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.eyes</upid>
                        <upid>filter.fruit</upid>
                        <upid>actuator.movement</upid>
                        <upid>selector.towardclosest</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.bumpers</upid>
                        <upid>filter.fruit</upid>
                        <upid>actuator.eat</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>actuator.movement</upid>
                        <upid>selector.wander</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

            <ExampleProgram>
              <description>
                조종할 수 있는 제트 비행기를 만듭니다. 왼쪽 스틱으로 움직임을 조종합니다.
              </description>
              <tileUpid>sensor.gamepad</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.leftstick</upid>
                        <upid>actuator.movement</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

            <ExampleProgram>
              <description>
                초록색 선을 따라가는 제트 비행기를 만듭니다.
              </description>
              <tileUpid>selector.followwaypoints</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>actuator.movement</upid>
                        <upid>selector.followwaypoints</upid>
                        <upid>modifier.green</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

            <ExampleProgram>
              <description>
                화면이 바뀌면 두 가지 행동을 번갈아 하는 제트 비행기를 만듭니다. A 버튼을 누르면 빨갛거나 파랗게 물듭니다.
              </description>
              <tileUpid>actuator.switchtask</tileUpid>
              <pages>
                <ExamplePage>
                  <description>빨갛게 물듭니다.</description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>actuator.glow</upid>
                        <upid>modifier.red</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.abutton</upid>
                        <upid>actuator.switchtask</upid>
                        <upid>modifier.taskb</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>

                <ExamplePage>
                  <description>파랗게 물듭니다.</description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>actuator.glow</upid>
                        <upid>modifier.blue</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.abutton</upid>
                        <upid>actuator.switchtask</upid>
                        <upid>modifier.taska</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>FloatBot</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            배는 물 위에서 떠다닐 수 있지만 땅 위에서는 움직일 수 없습니다.
          </description>
          <upid>filter.floatbot</upid>
          <programs>

            <ExampleProgram>
              <description>
                조종할 수 있는 배를 만듭니다. 왼쪽 스틱으로 움직임을 조종합니다.
              </description>
              <tileUpid>sensor.gamepad</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.leftstick</upid>
                        <upid>actuator.movement</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

            <ExampleProgram>
              <description>
                10초 마다 사과를 만들며 돌아다니는 배를 만듭니다.
              </description>
              <tileUpid>selector.wander</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <reflex>
                        <upids>
                          <upid>actuator.movement</upid>
                          <upid>selector.wander</upid>
                        </upids>
                      </reflex>
                      <upids>
                        <upid>actuator.movement</upid>
                        <upid>selector.wander</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.timer</upid>
                        <upid>filter.10seconds</upid>
                        <upid>actuator.make</upid>
                        <upid>modifier.objectfruit</upid>
                        <upid>modifier.red</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>FastBot</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            자전거는 빠르고 높은 언덕을 올라갈 수 있고 점프할 수 있습니다.
          </description>
          <upid>filter.fastbot</upid>
          <programs>

            <ExampleProgram>
              <description>
                조종할 수 있는 자전거를 만듭니다. 왼쪽 스틱으로 움직임을 조종합니다. A 버튼을 누르면 자전거가 점프합니다.
              </description>
              <tileUpid>sensor.gamepad</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.leftstick</upid>
                        <upid>actuator.movement</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.abutton</upid>
                        <upid>actuator.jump</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>StickBoy</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            막대기는 움직일 수 없지만 땅 속에 숨길 수 있습니다. 닫혀 있을 때는 무적입니다.
          </description>
          <upid>filter.stick</upid>
          <programs>

            <ExampleProgram>
              <description>
                조종할 수 있는 막대기를 만듭니다. Y 와 A 버튼으로 막대기를 열고 닫습니다. B 버튼으로 미사일을 발사합니다.
              </description>
              <tileUpid>sensor.gamepad</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.ybutton</upid>
                        <upid>actuator.open</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.abutton</upid>
                        <upid>actuator.close</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.bbutton</upid>
                        <upid>actuator.shoot</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>SubBot</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            잠수함은 물속에 있을 때 가장 좋습니다.
          </description>
          <upid>filter.subbot</upid>
          <programs>

            <ExampleProgram>
              <description>
                조종할 수 있는 잠수함을 만듭니다. 왼쪽 스틱으로 움직임을 조종합니다. Y 와 A 버튼으로 물 위로 올라오거나 가라앉게 합니다.
              </description>
              <tileUpid>sensor.gamepad</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.ybutton</upid>
                        <upid>actuator.watersurface</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.abutton</upid>
                        <upid>actuator.waterdive</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.leftstick</upid>
                        <upid>actuator.movement</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Fan</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            선풍기는 물체를 밀거나 당기도록 프로그래밍 할 수 있습니다.
          </description>
          <upid>filter.fan</upid>
          <programs>
            <ExampleProgram>
              <description>
                비행접시를 따라다니는 불빛을 만듭니다.
              </description>
              <tileUpid>selector.towardclosest</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.eyes</upid>
                        <upid>filter.saucer</upid>
                        <upid>actuator.movement</upid>
                        <upid>selector.towardclosest</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>actuator.movement</upid>
                        <upid>selector.wander</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Octopus</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            문어는 미끄러운 캐릭터이고 바다를 사랑합니다.
          </description>
          <upid>filter.octopus</upid>
          <programs>

            <!-- Enter the example program here -->
            <ExampleProgram>
              <description>스스로 숨었다가 다시 나타날 수 있는 문어를 만듭니다.</description>
              <tileUpid>actuator.camouflage</tileUpid>
              <pages>
                <ExamplePage>
                  <description>첫 번째 화면</description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.abutton</upid>
                        <upid>actuator.camouflage</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.bbutton</upid>
                        <upid>actuator.uncamouflage</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

            <ExampleProgram>
              <description>먹물을 쏘는 문어를 만듭니다.</description>
              <tileUpid>filter.inkjet</tileUpid>
              <pages>
                <ExamplePage>
                  <description>먹물을 만듭니다.</description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.xbutton</upid>
                        <upid>actuator.launch</upid>
                        <upid>modifier.angle.low</upid>
                        <upid>modifier.strongly</upid>
                        <upid>modifier.objectinkjet</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Light</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            불빛은 빠르게 움직이며 여러분의 세계를 밝게 합니다.
          </description>
          <upid>filter.light</upid>
          <programs>

            <ExampleProgram>
              <description>
                비행접시를 따라다니는 불빛을 만듭니다.
              </description>
              <tileUpid>selector.towardclosest</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.eyes</upid>
                        <upid>filter.saucer</upid>
                        <upid>actuator.movement</upid>
                        <upid>selector.towardclosest</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>actuator.movement</upid>
                        <upid>selector.wander</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Wisp</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            도깨비불은 빠르게 움직이며 빛나는 흔적을 뒤에 남깁니다.
          </description>
          <upid>filter.wisp</upid>
          <programs>

            <ExampleProgram>
              <description>
                다른 도깨비불을 따라다니는 도깨비불을 만듭니다.
              </description>
              <tileUpid>selector.towardclosest</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.eyes</upid>
                        <upid>filter.wisp</upid>
                        <upid>actuator.movement</upid>
                        <upid>selector.towardclosest</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>actuator.movement</upid>
                        <upid>selector.wander</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Saucer</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            비행접시는 가장 빠르고 날렵한 캐릭터입니다. 비행접시는 빨리빨리 방향을 바꿀 수 있습니다.
          </description>
          <upid>filter.saucer</upid>
          <programs>

            <ExampleProgram>
              <description>
                사과를 잡고 움직이는 비행접시를 만듭니다. 이 예제는 많은 화면을 사용합니다.
              </description>
              <tileUpid>actuator.grab</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.eyes</upid>
                        <upid>filter.fruit</upid>
                        <upid>actuator.movement</upid>
                        <upid>selector.towardclosest</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.scan</upid>
                        <upid>filter.fruit</upid>
                        <upid>actuator.grab</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.got</upid>
                        <upid>actuator.switchtask</upid>
                        <upid>modifier.taskb</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>actuator.movement</upid>
                        <upid>selector.wander</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>

                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.timer</upid>
                        <upid>filter.05seconds</upid>
                        <upid>actuator.drop</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>actuator.movement</upid>
                        <upid>selector.wander</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.got</upid>
                        <upid>filter.countnone</upid>
                        <upid>actuator.switchtask</upid>
                        <upid>modifier.taskc</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>

                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.timer</upid>
                        <upid>filter.05seconds</upid>
                        <upid>actuator.switchtask</upid>
                        <upid>modifier.taska</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>actuator.movement</upid>
                        <upid>selector.wander</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>

              </pages>
            </ExampleProgram>

            <ExampleProgram>
              <description>
                조종할 수 있는 비행접시를 만듭니다. 왼쪽 스틱으로 움직임을 조종하고 오른쪽 스틱으로 총알을 발사합니다.
              </description>
              <tileUpid>sensor.gamepad</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.leftstick</upid>
                        <upid>actuator.movement</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.rightstick</upid>
                        <upid>actuator.shoot</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>

              </pages>
            </ExampleProgram>

          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>WindBlimp</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            블림프은 천천히 돌아다닙니다.
          </description>
          <upid>filter.windblimp</upid>
          <programs>

            <ExampleProgram>
              <description>
                조종할 수 있는 블림프을 만듭니다. 왼쪽 스틱으로 움직임을 조종합니다.
              </description>
              <tileUpid>sensor.gamepad</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.leftstick</upid>
                        <upid>actuator.movement</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>BalloonBot</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            풍선은 모든 것을 볼 수 있고 천천히 하늘로 올라갑니다. 풍선은 멋진 게임 심판으로 쓸 수 있습니다.
          </description>
          <upid>filter.balloonbot</upid>
          <programs>

            <ExampleProgram>
              <description>
                조종할 수 있는 풍선을 만듭니다. 왼쪽 스틱으로 움직임을 조종합니다. Y 와 A 버튼으로 위 아래로 조종합니다.
              </description>
              <tileUpid>sensor.gamepad</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.ybutton</upid>
                        <upid>actuator.airrise</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.abutton</upid>
                        <upid>actuator.airdrop</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.leftstick</upid>
                        <upid>actuator.movement</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Puck</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            퍽은 마찰 없이 돌아다니고 속도가 줄어들지 않고도 튀어 올라서 빠른 게임에 사용하기 좋습니다.
          </description>
          <upid>filter.puck</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>PushPad</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            푸시패드는 크고 강합니다.
          </description>
          <upid>filter.pushpad</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Turtle</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            거북이는 하늘에서 날 수 있고 열고 닫는 움직임으로 등껍질 안에 숨을 수 있습니다. 거북이 등껍질이 닫혀있으면 공격을 받아도 무적입니다.
          </description>
          <upid>filter.turtle</upid>
          <programs>

            <ExampleProgram>
              <description>
                조종할 수 있는 거북이를 만듭니다. 왼쪽 스틱으로 움직임을 조종합니다. A 버튼을 누르면 등껍질에 숨고, Y 버튼을 누르면 빠져나옵니다.
              </description>
              <tileUpid>sensor.gamepad</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.ybutton</upid>
                        <upid>actuator.open</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.abutton</upid>
                        <upid>actuator.close</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.leftstick</upid>
                        <upid>actuator.movement</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>SwimFish</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            물고기는 물속에 있을 때가 제일 좋습니다. 땅 위로 올라오면 아무것도 하지 못합니다.
          </description>
          <upid>filter.swimfish</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Cloud</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            구름은 마이크로소프트 본사가 있는 레드몬드의 날씨를 나타냅니다.
          </description>
          <upid>filter.cloud</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Mine</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            지뢰에는 숨기거나 뽑을 수 있는 못이 달려있습니다. 열림으로 못을 보이게 하거나 닫힘으로 못을 숨길 수 있습니다.
          </description>
          <upid>filter.mine</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Drum</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            다른 캐릭터들이 드럼 위로 점프하면 캐릭터들이 공중으로 발사됩니다.
          </description>
          <upid>filter.drum</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Sputnik</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            스푸트니크는 비행접시의 좋은 친구입니다.
          </description>
          <upid>filter.sputnik</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>BigYucca1</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            나무들도 프로그래밍 할 수 있습니다.
          </description>
          <upid>filter.bigyucca1</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Yucca1</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            나무들도 프로그래밍 할 수 있습니다.
          </description>
          <upid>filter.yucca1</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Yucca3</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            나무들도 프로그래밍 할 수 있습니다.
          </description>
          <upid>filter.yucca3</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Yucca2</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            나무들도 프로그래밍 할 수 있습니다.
          </description>
          <upid>filter.yucca2</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Fruit</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            사과는 맛도 좋고 발사하기도 재미있습니다.
          </description>
          <upid>filter.fruit</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>IceBerg</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            빙산은 모든 물 위로 떠오릅니다.
          </description>
          <upid>filter.iceBerg</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Rock</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            돌도 다른 모든 물체들처럼 프로그래밍 할 수 있습니다.
          </description>
          <upid>filter.rock</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>RockLowValue</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            화성암은 오직 로버가 하는 움직임에 반응하도록 프로그래밍 할 수 있습니다.
          </description>
          <upid>filter.rockLowValue</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>RockHighValue</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            퇴적암은 오직 로버가 하는 움직임에 반응하도록 프로그래밍 할 수 있습니다.
          </description>
          <upid>filter.rockHighValue</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>RockLowValueUnknown</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            수수께끼 돌은 로버가 훑어봤을 때 화성암인 것으로 나타납니다.
          </description>
          <upid>filter.rockLowValueUnknown</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>RockHighValueUnknown</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            수수께끼 돌은 로버가 훑어봤을 때 퇴적암인 것으로 나타납니다.
          </description>
          <upid>filter.rockHighValueUnknown</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Star</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            별도 다른 모든 물체들처럼 프로그래밍 할 수 있습니다.
          </description>
          <upid>filter.star</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Coin</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            동전은 고전적인 적 피하기 게임의 필수 요소입니다.
          </description>
          <upid>filter.coin</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>SoccerBall</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            프로그래밍을 하던가, 그냥 차버립니다. 어떻게 하던지, 그건 그냥 공일뿐입니다.
          </description>
          <upid>filter.soccerball</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Castle</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            성은 움직임이 별로 없습니다.
          </description>
          <upid>filter.castle</upid>
          <programs>
            <ExampleProgram>
              <description>
                무언가 부딪히면 폭파되는 성을 만듭니다.
              </description>
              <tileUpid>sensor.gamepad</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.bumpers</upid>
                        <upid>filter.anything</upid>
                        <upid>actuator.boom</upid>
                        <upid>modifier.me</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Heart</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            이것은 체력 팩입니다.
          </description>
          <upid>filter.heart</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Bullet</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            이것은 총알 팩입니다.
          </description>
          <upid>filter.bullet</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Factory</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            만화영화 공장은 모든 게임에서 훌륭한 표시건물입니다.
          </description>
          <upid>filter.factory</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Hut</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            오두막은 모든 게임에서 훌륭한 표시건물입니다.
          </description>
          <upid>filter.hut</upid>
          <programs>
          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>WayPoint</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            패스은 여러모로 쓸 수 있습니다. 로봇이 따라가는 길을 정하는데 쓸 수 있습니다. 보통 로봇이 가는 길은 눈에 보이지 않지만, 선의 설정을 바꿔서 도로나 벽으로 정할 수 있습니다. 로봇이 길을 따라가게 프로그래밍 한다면, 따라가는 길의 색을 정할 수 있습니다. 선의 색은 로봇의 색 바꾸기와 같은 방법으로 바꿀 수 있습니다. 설정 메뉴에서 패스 추적하기를 설정하면 눈에 보이지 않는 패스을 보이게 할 수 있습니다. </description>
          <upid>selector.followwaypoints</upid>
          <programs>

          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>PathGeneric</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            패스는 여러모로 쓸 수 있습니다. 로봇이 따라가는 길을 정하는데 쓸 수 있습니다. 보통 로봇이 가는 길은 눈에 보이지 않지만, 선의 설정을 바꿔서 도로나 벽으로 정할 수 있습니다. 로봇이 길을 따라가게 프로그래밍 한다면, 따라가는 길의 색을 정할 수 있습니다. 선의 색은 로봇의 색 바꾸기와 같은 방법으로 바꿀 수 있습니다. 설정 메뉴에서 패스 추적하기를 설정하면 눈에 보이지 않는 패스를 보이게 할 수 있습니다.
          </description>
          <upid>filter.pathplain</upid>
          <programs>

          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>PathVeggie</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            꽃길을 그리면 여러분의 세계에 꽃을 심을 수 있습니다.
          </description>
          <upid>filter.pathflora</upid>
          <programs>

          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>PathRoad</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            패스를 그리면 여러분의 세계에 길을 만드는 것입니다.
          </description>
          <upid>filter.pathroad</upid>
          <programs>

          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>PathWall</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            패스를 그리면 여러분의 세계에 벽을 만드는 것과 마찬가지입니다. 선을 연결하는 점의 높이를 조절해서 벽의 높이를 정할 수 있습니다.
          </description>
          <upid>filter.pathwall</upid>
          <programs>

          </programs>
        </ActorHelp>
      </value>
    </item>

    <item>
      <key>
        <string>Rover</string>
      </key>
      <value>
        <ActorHelp>
          <description>
            화성의 로버는 화성의 돌에 특별한 행동을 할 수 있습니다. (비춰보기, 훑어보기, 조사하기, 사진찍기)
          </description>
          <upid>filter.rover</upid>
          <programs>

            <ExampleProgram>
              <description>
                로버의 기본적인 움직임 조종 버튼을 설정합니다.
              </description>
              <tileUpid>sensor.scanned</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.ybutton</upid>
                        <upid>actuator.picture</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.bbutton</upid>
                        <upid>actuator.beam</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.xbutton</upid>
                        <upid>actuator.inspect</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.abutton</upid>
                        <upid>actuator.scan</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.gamepad</upid>
                        <upid>filter.leftstick</upid>
                        <upid>actuator.movement</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

			<ExampleProgram>
              <description>
                수수께끼 돌을 찾아 훑어보는 로버를 만듭니다.
              </description>
              <tileUpid>sensor.scanned</tileUpid>
              <pages>
                <ExamplePage>
                  <description>
                    이것은 화면 설명입니다. 등장인물 도움말에서는 보이지 않지만, 프로그램 도움말에서는 보입니다.
                  </description>
                  <reflexes>
                    <reflex>
                      <upids>
                        <upid>sensor.eyes</upid>
                        <upid>filter.rockUnknown</upid>
                        <upid>actuator.movement</upid>
                        <upid>selector.towardclosest</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>sensor.bumpers</upid>
						<upid>filter.rockUnknown</upid>
                        <upid>actuator.scan</upid>
                      </upids>
                    </reflex>
                    <reflex>
                      <upids>
                        <upid>actuator.movement</upid>
                        <upid>selector.wander</upid>
                      </upids>
                    </reflex>
                  </reflexes>
                </ExamplePage>
              </pages>
            </ExampleProgram>

          </programs>
        </ActorHelp>
      </value>
    </item>


  </actorHelp>
</Help>
